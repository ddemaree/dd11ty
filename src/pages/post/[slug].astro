---
import SiteLayout from '@components/SiteLayout.astro';
import Prose from '@components/Prose.astro';
import Date from '@components/Date.astro';
import { getEntryBySlug, getCollection } from 'astro:content';
import Icon from '@components/Icon.astro';

const { slug } = Astro.params;
const entry = await getEntryBySlug('blog', slug as string);
const { title, excerpt, date } = entry.data;
const { Content } = await entry!.render();

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  return entries.map(({ slug }) => ({ params: { slug }}));
}

---
<SiteLayout title={entry?.data.title}>
  <article>
    <header class="post-header">
      <h1 class="post-title">{title}</h1>
      {excerpt && <p class="post-excerpt">{excerpt}</p>}
      <p class="post-dateline"><Date date={date} /></p>
    </header>
    <Prose>
      <Content />

      <div class="end-ornament">
        <Icon icon="dd-icon" />
      </div>
    </Prose>
  </article>
</SiteLayout>

<style lang="scss">
  @use "../../styles/fonts";

  @layer patterns {
    :where(article) {
      font-family: fonts.$serif;
    }

    article :global(h1, h2, h3) {
      font-family: fonts.$sans;
      font-weight: 600; 
    }

    header.post-header {
      --post-header-padding-block: clamp(1rem, 4vw, 2.5rem);
      font-family: fonts.$sans;
      padding-block: var(--post-header-padding-block);
      padding-inline: var(--dd-layout-padding-inline);
      display: flex;
      align-items: center;
      flex-direction: column;
      margin-top: calc(-1 * (var(--post-header-padding-block)));
    }

    :where(header.post-header > *) {
      max-width: var(--width-content);
      width: 100%;
    }

    :where(header.post-header > * + *) {
      margin-block-start: 0.5rem;
    }

    .post-title {
      color: var(--color-text-high-emphasis);
      font-size: clamp(1.75rem, 7vw, 2.25rem);
      font-weight: 700;
      line-height: 1;
      letter-spacing: -0.3px;
    }

    .post-excerpt {
      color: var(--color-text-low-emphasis);
      font-size: clamp(1.25rem, 5vw, 1.5rem);
      line-height: 1.125;
    }

    .post-dateline {
      font-size: clamp(1rem, 4.5vw, 1.125rem);
      font-weight: 500;
      margin-block-start: 1rem;
      text-transform: uppercase;
    }

    .end-ornament {
      --end-ornament-pattern-color: #ddd;
      --end-ornament-height: 12px;
      color: #888;
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      margin-block-start: var(--prose-flow-spacing-big);
      margin-block-end: 2rem;
      font-size: 1.75rem;
      line-height: 1;
      position: relative;
    }

    .end-ornament:before,
    .end-ornament:after {
      position: absolute;
      display: block;
      content: ' ';
      height: var(--end-ornament-height);
      top: calc(50% - (var(--end-ornament-height) / 2));
      width: 44%;
      background-image: linear-gradient(32deg, var(--end-ornament-pattern-color), var(--end-ornament-pattern-color) 50%, transparent 51%, transparent);
      background-size: 2% calc(var(--end-ornament-height) / 3);
    }

    .end-ornament:before {
      left: 0;
    }

    .end-ornament:after {
      right: 0;
    }
  }
</style>