---
import type { PaginateFunction, Page } from "astro";
import { getCollection, CollectionEntry } from "astro:content";

import SiteLayout from "@/components/SiteLayout.astro";
import IndexPost from "./_IndexPost.astro";
import { createPagination } from "./_Pagination";

type BlogEntry = CollectionEntry<"blog">;
type BlogPage = Page<BlogEntry>;
type Props = { page: BlogPage };

export const prerender = true;

export const getStaticPaths = async ({
  paginate,
}: {
  paginate: PaginateFunction;
}) => {
  const allBlogPosts = await getCollection("blog");
  allBlogPosts.sort((a, b) => (a.data.date > b.data.date ? -1 : 1));

  return paginate(allBlogPosts, { pageSize: 8 });
};

const { page } = Astro.props as Props;
const { Pagination } = createPagination(page);
---

<SiteLayout mainClass="grid-inset gap-y-8 justify-items-center">
  {
    page.data.map((post: BlogEntry, index: number) => (
      <>
        {index > 0 && (
          <hr class="max-w-content border-dd-dividers my-12 w-full" />
        )}
        <IndexPost post={post} />
      </>
    ))
  }

  <Pagination
    className="my-12 font-semibold w-full row justify-between max-w-content"
  />
</SiteLayout>
