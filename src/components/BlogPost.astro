---
import Date from './Date.astro';

export interface Props {
	title: string;
	date: string;
}

const { title, date } = Astro.props;
---

<div class="layout">
	<article class="content">
		<header class=" w-minus-inset mx-auto font-sans text-center my-10">
			{date && <p class="publish-date mb-3 text-text-light">
				<Date date={date} />
			</p>}
			<h1 class="title font-semibold text-4xl leading-[1.125]">{title}</h1>
		</header>
		<main>
			<slot />
		</main>
	</article>
</div>

<style>
	.content {
		@apply text-lg font-serif leading-[1.5];
	}

	.content :global(:where(small,
	.text_small)) {
		font-size: theme("fontSize.sm");
	}

	.content :global(strong) {
		font-weight: 600;
		color: inherit;
	}

	.content :global(a) {
		@apply text-primary underline decoration-primary/30;
		align-items: center;
		gap: 0.5rem;
		text-decoration-thickness: 1.25px;
		text-underline-offset: 0.125em;
	}

	.content :global(a:hover, a:focus) {
		@apply decoration-primary/100;
	}

	/* .content :global(a:focus) {
		outline: 2px solid currentColor;
		outline-offset: 0.25em;
	} */

	.content :global(:where(b, strong)) {
		color: var(--theme-text-bold);
		font-weight: 600;
	}

	.content :global(:where(img, video)) {
		max-width: 100%;
		height: auto;
		display: block;
		margin-inline: auto;
	}

	.content :global(:where(main > *, main astro-island > *)) {
		@apply w-minus-inset;
		margin-block: 0;
		margin-inline: auto;
		max-width: var(--width-content);

		&:first-child {
			margin-block-start: 0;
		}

		&:where(.align-wide, .size-wide, .size-large) {
			max-width: var(--width-wide);
		}
	}

	.content :global(:where(main > * + *, main blockquote > * + *)) {
		margin-top: 1.25rem;
	}

	.content :global(h1, h2, h3, h4, h5, h6) {
		@apply font-sans text-text-strong;
	}

	.content :global(h2, h3, h4) {
		margin-top: 4rem;
		font-weight: 500;
	}

	.content :global(h2, h3, h4) {
		font-size: revert;
	}

	.content :global(:where(ul, ol)) {
		list-style-type: revert;
		list-style-position: outside;
		padding-inline-start: 2.5rem;

		:global(li + li) {
			margin-block-start: 0.5rem;
		}

		:global(::marker) {
			@apply text-primary;
		}
	}

	.content :global(ul) {
		list-style-type: square;
	}

	.content :global(:where(blockquote)) {
		@apply border-l-divider border-l-4;
		--padding-block: 1rem;
		--padding-inline: 1.25rem;
		--color: var(--theme-divider);
		
		background: transparent;
		border-radius: 0;
		display: flex;
		flex-direction: column;
		padding-inline: var(--padding-inline);
	}

	.content :global(:where(hr)) {
		@apply border-t-divider border-t-2 my-12;
		max-width: calc(var(--width-content) / 2);
	}

	.content :global(:where(main > figure, main astro-island > figure)) {
		margin-block: 2rem;

		&:where(.size-wide, .size-full) {
			margin-block: 2.5rem;
		}
	}

	.content :global(main > .twitter-tweet) {
		margin-block: 2rem !important;
	}

	.content :global(:where(figcaption)) {
		@apply text-center text-sm font-sans mt-2 text-text-light;
		margin-inline: auto;
		max-width: var(--width-content);
		width: calc(100vw - (2 * var(--spacing-inset)));
	}

	.content :global(.block-embed) {
		position: relative;
		aspect-ratio: var(--embed-aspect-ratio, 16 / 9);

		:global(> iframe) {
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
		}
	}

	/* header {
		display: flex;
		flex-direction: column;
		text-align: center;
		align-items: center;
		justify-content: center;

		padding-block-end: 3rem;
	}

	.publish-date {
		@apply font-sans text-text-light;
	}

	.title {
		font-size: 2.25rem;
		font-weight: 600;
		line-height: 1;
	} */
</style>
<style is:global>

.block-gallery {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
}

.block-gallery .block-image {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	width: calc(50% - 1rem);
}

.block-gallery .block-image img {
	object-fit: cover;
	height: 100%;
	width: 100%;
	flex: 1 0 0;
	max-height: 24rem;
	object-position: var(--img-position-x, 50%) var(--img-position-y, 50%);
}

</style>
