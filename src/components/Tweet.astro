---

const { url, id } = Astro.props;

const tweetUrl = url ? url : `https://twitter.com/x/status/${id}`;
const requestUrl = `https://publish.twitter.com/oembed?url=${encodeURIComponent(tweetUrl)}`;

const statusMessages = {
  404: "Tweet not found",
  'DEFAULT': "A tweet could not be fetched for some reason"
}

const tweetPayload = await fetch(requestUrl)
  .then(res => {
    if(res.status >= 400) {
      return { status: res.status, html: "" }
    }

    return res.json();
  });

function getStatusMessage(status = null) {
  return statusMessages[status] || statusMessages.DEFAULT;
}

const { status, html } = tweetPayload;

---
<figure class="wp-block-embed aligncenter is-type-rich is-provider-twitter wp-block-embed-twitter p-8 bg-slate-100">
  {html && <div class="wp-block-embed__wrapper">
    <Fragment set:html={html} />
  </div>}
  {status && <div class="tweet-error text-center">
    <div class="message">{getStatusMessage(status)}</div>
    <code class="text-sm text-slate-500">{tweetUrl}</code>
  </div> }
</figure>